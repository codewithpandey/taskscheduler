plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.taskscheduler'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'org.postgresql:postgresql:42.7.1'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    runtimeOnly 'com.h2database:h2' // or your preferred database

    implementation 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // Jakarta Persistence API for annotations like @Entity, @Id
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    // Use JUnit test framework.
    testImplementation libs.junit
    // This dependency is used by the application.
    implementation libs.guava
}

test {
    useJUnitPlatform()
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.taskscheduler.auth.AuthServiceApplication'
}

bootJar {
    archiveBaseName.set("auth-service")
    archiveVersion.set("0.0.1-SNAPSHOT")
}