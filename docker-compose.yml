version: '3.8'

services:
  auth-services:
    build:
      context: ./services/auth-services
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/task_scheduler
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      - db
      - kafka
    healthcheck:
      test: ["CMD", "curl", "-f", "http://auth-services:8080/auth/ping"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  task-services:
    build:
      context: ./services/task-services
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/task_scheduler
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      - db
      - kafka
    healthcheck:
      test: ["CMD", "curl", "-f", "http://task-services:8081/tasks/ping"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  notification-services:
    build:
      context: ./services/notification-services
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/task_scheduler
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      - db
      - kafka
    healthcheck:
      test: ["CMD", "curl", "-f", "http://notification-services:8082/notifications/ping"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  db:
    image: postgres:13
    container_name: task_scheduler_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: task_scheduler
    ports:
      - "5432:5432"
    volumes:
      - task_scheduler_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "task_scheduler"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENER_NAME: INSIDE
      KAFKA_LISTENER_NAME: INSIDE
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_INTERNAL_PORT: 9093
      KAFKA_LISTENER_PORT: 9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_INTER_BROKER_LISTENER_NAME: INSIDE
    depends_on:
      - zookeeper
    volumes:
      - kafka-data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9093"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    volumes:
      - zookeeper-data:/data
      - zookeeper-datalog:/datalog
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "-w", "1", "localhost", "2181"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

volumes:
  task_scheduler_data:
    driver: local
  kafka-data:
    driver: local
  zookeeper-data:
    driver: local
  zookeeper-datalog:
    driver: local
